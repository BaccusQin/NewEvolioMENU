/* ------------------------------------ * *  ログイン実行 * ------------------------------------ */function doLogin() {    var errMsg = "";    //ユーザＩＤ入力チェック    lidObj = document.forms[0].TxtLoginID;    if (lidObj.value.length == 0) {        switch (document.getElementById("HdnLangState").value) {            case '0':                errMsg = errMsg.concat("ユーザＩＤを入力してください\n");                break;            case '1':                errMsg = errMsg.concat("Please Enter User ID\n");                break;        }    	lidObj.className = "DC_TextErr";    } else {    	lidObj.className = "DC_Text";    }    //パスワード入力チェック    pwdObj = document.forms[0].TxtPassword;    if (pwdObj.value.length == 0) {        switch (document.getElementById("HdnLangState").value) {            case '0':                errMsg = errMsg.concat("パスワードを入力してください\n");                break;            case '1':                errMsg = errMsg.concat("Please Enter Password\n");                break;        }    	pwdObj.className = "DC_TextErr";    } else {    	pwdObj.className = "DC_Text";    }    if (errMsg.length == 0) {        //チェックＯＫ        return true;    } else {        //チェックＮＧ        window.alert(errMsg);        return false;    }}/* ------------------------------------ * *  パスワード変更実行 * ------------------------------------ */function doChangePassword() {    var errMsg = "";    //現在のパスワード入力チェック    lidObj = document.forms[0].TxtPasswordOld;    if (lidObj.value.length == 0) {        switch (document.getElementById("HdnLangState").value) {            case '0':                errMsg = errMsg.concat("現在のパスワードを入力してください\n");                break;            case '1':                errMsg = errMsg.concat("Please Enter Old Password\n");                break;        }    	lidObj.className = "DC_TextErr";    } else {    	lidObj.className = "DC_Text";    }    //新しいパスワード入力チェック    pwdObj = document.forms[0].TxtPasswordNew;    if (pwdObj.value.length == 0) {        switch (document.getElementById("HdnLangState").value) {            case '0':                errMsg = errMsg.concat("新しいパスワードを入力してください\n");                break;            case '1':                errMsg = errMsg.concat("Please Enter New Password\n");                break;        }    	pwdObj.className = "DC_TextErr";    } else {    	pwdObj.className = "DC_Text";    }    //新しいパスワード（確認）入力チェック    pwdObj = document.forms[0].TxtPasswordNewRe;    if (pwdObj.value.length == 0) {        switch (document.getElementById("HdnLangState").value) {            case '0':                errMsg = errMsg.concat("新しいパスワード（確認）を入力してください\n");                break;            case '1':                errMsg = errMsg.concat("Please Enter Confirm Password\n");                break;        }        pwdObj.className = "DC_TextErr";    } else {        pwdObj.className = "DC_Text";    }    if (errMsg.length == 0) {        //チェックＯＫ        return true;    } else {        //チェックＮＧ        window.alert(errMsg);        return false;    }}/* ------------------------------------ * *  入力補助 * ------------------------------------ */function setLabelColor(label, color) {    oElement = document.getElementById(label);    oElement.style.color = color;}/* ------------------------------------ * *  メニュー切替 * ------------------------------------ */function LeftSubItem(strID) {    //表示メニュー切替    var listCount = 0;    var listNum = "";    var itemName = "";    var tableName = "";    while (true) {        listNum = ('00' + listCount).slice(-2);        itemName = "LeftSubItem" + listNum;        tableName = "RightTable" + listNum;        if (document.getElementById(itemName) != null) {            if (strID == listNum) {                document.getElementById(itemName).className = 'current';                document.getElementById(tableName).className = 'OBJ_VISIBLE';            } else {                document.getElementById(itemName).className = 'a';                document.getElementById(tableName).className = 'OBJ_INVISIBLE';            }        } else {            break;        }        listCount++;    }}function SetLeftTop(ID) {    var listCount = 0    var listNum = "";    var listName = "";    while (true) {        listNum = ('00' + listCount).slice(-2);        listName = "LeftTopItem" + listNum;        if (document.getElementById(listName) != null) {            if (ID == listNum) {                document.getElementById(listName).className = "nav-top-item current";            }            else {                document.getElementById(listName).className = "nav-top-item";            }        }        else {            break;        }        listCount++;    }    }    /* ------------------------------------ * *  EVOLIO出力 * ------------------------------------ */function excelPop(ExcelNm) {    //アドレス変換    var exPathRp = ExcelNm.replace(/@@/g, '\\');    //Excel呼び出し    try {        var wsh = new ActiveXObject("WScript.Shell");        wsh.run("net use \\\\172.31.217.85 P@ssw0rd /user:%COMPUTERNAME%\\Administrator");        document.forms["Menu"].style.cursor = "wait";        var ExcelApp = new ActiveXObject("Excel.Application");               //警告メッセージを表示しない        ExcelApp.DisplayAlerts = false;        var ExcelBook = ExcelApp.WorkBooks.Open(exPathRp, 0, true);      //  ExcelApp.Visible = true;        //IESQLユーザ情報設定        var ExcelSheet = ExcelBook.WorkSheets("設定シート");        ExcelSheet.Activate;        ExcelSheet.Application.Visible = true;        //EVOLIOユーザーをセット        ExcelSheet.Range("A1").Value = document.getElementById("TxtEvoUsr").textContent;        ExcelSheet.Range("A2").Value = document.getElementById("TxtEvoPas").textContent;                    }    catch (e) {        switch (document.getElementById("HdnLangState").textContent) {            case '0':                alert("EVOLIOのファイルオープンに失敗しました\n\n" + "[" + exPathRp + "]");                break;            case '1':                alert("EVOLIO File Open Failed\n\n" + "[" + exPathRp + "]");                break;        }        return false;    }    finally {        //オブジェクトの開放        wsh = null;        ExcelApp = null;        CollectGarbage();        document.forms["Menu"].style.cursor = "auto";    }}function downloadInstaller() {    window.open('EvolioInstaller.zip');}function ShowDiv(show_div, bg_div) {    document.getElementById(show_div).style.display = 'block';    document.getElementById(bg_div).style.display = 'block';    var bgdiv = document.getElementById(bg_div);    bgdiv.style.width = document.body.scrollWidth;    // bgdiv.style.height = $(document).height();    $("#" + bg_div).height($(document).height());};//关闭弹出层function CloseDiv(show_div, bg_div) {    window.close;    document.getElementById(show_div).style.display = 'none';    document.getElementById(bg_div).style.display = 'none';};function closeSubWin() {     parent.location.reload();
    //window.location.reload();
    parent.document.getElementById("MyDiv").style.display = 'none';    parent.document.getElementById("fade").style.display = 'none';
};